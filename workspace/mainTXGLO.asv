%% Concatenate OGLO analysis

clear;clc;close all;

%% Setup

cd('D:\Electrophysiology\Matdelane\');
addpath(genpath('matnwb'));
addpath(genpath('matdelane'));
addpath(genpath('flipv2'));

generateCore();
addpath('fieldtrip');
ft_defaults;
disp("Setup done.");

%% TFR unifier > LOAD/append

areax = "MT";
tfrpath = "tfrData\";
tfrfiles = {dir(tfrpath).name};
tfrfiles = tfrfiles(endsWith(tfrfiles, areax + ".mat"));
Nfiles = length(tfrfiles);
tfrData = cell(Nfiles, 12, 4);

%%

for ik = 1:Nfiles

    tfrx = load(tfrpath + tfrfiles{ik});
    tfrx = tfrx.tfrx;

    for kk = 1:4

        for jk = 1:12

            imxx = tfrx{jk, kk};
            imx2 = squeeze(max(imxx, [], 2));
            imx2 = max(imx2, [], 2);
            imx2 = (imx2 - mean(imx2)) / (std(imx2) / sqrt(length(imx2)));
            
            imx2 = abs(imx2) > 5;
            imxx(imx2, :, :) = [];
            tfrData{ik, jk, kk} = imxx;

        end

    end

    fprintf(num2str(ik));

end

%% gSave

save("tfrData\tfrV1g.mat", "tfrData", "-v7.3");

%% TFR plotter > TODO/Implement for tfrData

%% TFR barplotter >

%% Load base jNWB

q1 = load("OGLOobj\sub-C31o_ses-230816PFC.mat", "obj").obj;
q1.tmap = q1.tmap + 50;

%% 

txlims = [q1.tmap(1) q1.tmap(end)];

tbaseline = q1.tbands{3}(end-10:end-4);
jTFRplot(tfrData, 8, 4, tbaseline, [2000 4000], q1, areax + "-");

tbaseline = q1.tbands{2}(end-10:end-4);
jTFRplot(tfrData, 7, 4, tbaseline, [1000 4000], q1, areax + "-");

%%

function jTFRplot(pgx, tcond1, layerid, tbaseline, txlims, q1, areanamex)
    
    % for cntx = 1:size(pgx, 1)
    % 
    %     for ik = 1:size(pgx, 2)
    % 
    %         for jk = 1:size(pgx, 3)
    % 
    %             % pgx{cntx, ik, jk} = jmed
    % 
    %         end
    % 
    %     end
    % 
    % end

    tfr1 = squeeze(mean(pgx{1, tcond1, layerid}, 1));

    for cntx = 2:size(pgx, 1)
    
        tfr1 = tfr1 + squeeze(mean(pgx{cntx, tcond1, layerid}, 1));

    end

    % tfr1e = squeeze(std(pgx{tcond1, layerid}));
    
    for ik = 1:size(tfr1, 1)
    
        tfr1(ik, :) = tfr1(ik, :) / mean(tfr1(ik, tbaseline));
    
    end
    
    figure;
    subplot(2, 1, 1);
    imagesc(10*log10(tfr1), "XData", q1.tmap, "YData", q1.fmap);
    % ylim([0 20])
    xlim(txlims);

    set(gca, "YDir", "normal");
    hold("on");
    xline(0);
    xline(1031);
    xline(2062);
    xline(3093);
    xlabel("Time (ms)");
    ylabel("Frequency (Hz)");
    title("Power change from baseline (dB)");
    colorbar;
    
    for fband = 1:5
    
        yline(q1.fmap(q1.fbands{fband}(1)), "Color", [1 0 0]);
    
    end
    
    xlabel("Time (ms)");
    subplot(2, 1, 2);
    cls = zeros(5, 3);
    cls(1, :) = [0 0 1];
    cls(2, :) = [1 0 0];
    cls(3, :) = [1 0.5 0];
    cls(4, :) = [1 0 1];
    cls(5, :) = [0 0.8 0.4];
    
    for fband = 1:5

        tfr1 = squeeze(mean(pgx{1, tcond1, layerid}(:, q1.fbands{fband}, :), 1));

        for cntx = 2:size(pgx, 1)
        
            tfr1 = tfr1 + squeeze(mean(pgx{cntx, tcond1, layerid}(:, q1.fbands{fband}, :), 1));

        end

        tfr1 = squeeze(mean(tfr1, 1));
        tfr1 = smooth(tfr1, 10, "lowess");
        baselinecrx = mean(tfr1(tbaseline));

        tfr1 = tfr1 / baselinecrx;

        ne1 = length(q1.fbands{fband}); % spectral res. bands
        ne2 = size(pgx{1, tcond1, layerid}, 1); % trial count
        ne3 = size(q1.x{tcond1}, 2); % channel count

        tfr1e = squeeze(std(pgx{1, tcond1, layerid}(:, q1.fbands{fband}, :) / baselinecrx));

        for cntx = 2:size(pgx, 1)

            tfr1e = tfr1e + squeeze(std(pgx{cntx, tcond1, layerid}(:, q1.fbands{fband}, :) / baselinecrx));

        end

        tfr1e = squeeze(mean(tfr1e, 1)) / sqrt(ne1 + ne2 + ne3);
        tfr1e = smooth(tfr1e, 10, "lowess");

        cl = cls(fband, :);
        y1s = 10*log10(tfr1);
        plot(q1.tmap, y1s, "DisplayName", q1.fbandlabels(fband), "LineWidth", 0.5, "Color", cl);
        hold("on");

        stx = tfr1 + tfr1e;
        sty = tfr1 - tfr1e;
        stx(stx <= 0) = 1e-2;
        sty(sty <= 0) = 1e-2;

        stx = 10*log10(stx);
        sty = 10*log10(sty);

        patch([q1.tmap; q1.tmap(end:-1:1)], [stx; sty(end:-1:1)], cl, "EdgeColor", "none", "FaceColor", cl, "FaceAlpha", 0.5, "HandleVisibility", "off");

        % ylim([0 20])
        xlim(txlims);
        yline(0, HandleVisibility="off");

        xline(0, HandleVisibility="off");
        xline(1031, HandleVisibility="off");
        xline(2062, HandleVisibility="off");
        xline(3093, HandleVisibility="off");
        xlabel("Times (ms)");
        ylabel("Power change (dB)");
        title("Power change from fixation baseline (+-2Se)");
    
    end
    
    colorbar;
    sgtitle(areanamex + q1.condinflabel(tcond1) + "-" + q1.layeridlabel(layerid));
    legend;

    fname = areanamex + q1.condinflabel(tcond1) + "-" + q1.layeridlabel(layerid);
    print(gcf,'-vector','-dsvg', fname + ".svg");

end

%%